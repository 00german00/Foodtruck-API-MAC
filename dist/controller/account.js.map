{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","register","username","body","email","password","err","account","send","authenticate","session","status","scope","get","logout","json","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAmB;AAAA,MAAhBA,MAAgB,QAAhBA,MAAgB;AAAA,MAARC,EAAQ,QAARA,EAAQ;;AAChC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CAAS,WAAT,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,sBAAQC,QAAR,CAAiB,sBAAa,EAACC,UAAUH,IAAII,IAAJ,CAASC,KAApB,EAAb,CAAjB,EAA2DL,IAAII,IAAJ,CAASE,QAApE,EAA8E,UAASC,GAAT,EAAaC,OAAb,EAAsB;AAClG,UAAGD,GAAH,EAAQ;AACNN,YAAIQ,IAAJ,CAASF,GAAT;AACD;;AAED,yBAASG,YAAT,CACE,OADF,EACW;AACPC,iBAAS;AADF,OADX,EAGMX,GAHN,EAGWC,GAHX,EAGgB,YAAM;AAClBA,YAAIW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,6CAArB;AACD,OALH;AAMC,KAXH;AAYC,GAbH;;AAeF;AACAX,MAAIC,IAAJ,CAAS,QAAT,EAAmB,mBAASW,YAAT,CACjB,OADiB,EACR;AACPC,aAAS,KADF;AAEPE,WAAO;AAFA,GADQ,CAAnB,gEApBkC,CAwBG;;;AAGrC;AACAf,MAAIgB,GAAJ,CAAQ,SAAR,gCAAiC,UAACd,GAAD,EAAMC,GAAN,EAAc;AAC7CA,QAAIc,MAAJ;AACAd,QAAIW,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,yBAArB;AACD,GAHD;;AAKA;AACA;AACAX,MAAIgB,GAAJ,CAAQ,KAAR,gCAA6B,UAACd,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIW,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqBhB,IAAIiB,IAAzB;AACD,GAFD;;AAIE,SAAOnB,GAAP;AACD,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Account from '../model/account';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\n\nimport { generateAccessToken, respond, authenticate } from '../middleware/authmiddleware';\n\nexport default ({ config, db}) => {\n  let api = Router();\n\n  // 'v1/account'\n  api.post('/register', (req, res) => {\n    Account.register(new Account( {username: req.body.email}), req.body.password, function(err,account) {\n      if(err) {\n        res.send(err);\n      }\n\n      passport.authenticate(\n        'local', {\n          session: false\n        }) (req, res, () => {\n          res.status(200).send('Sucessfully created new account, Rock&Roll!');\n        });\n      });\n    });\n\n// '/v1/account/login'\napi.post('/login', passport.authenticate(\n  'local', {\n    session: false,\n    scope: []\n  }), generateAccessToken, respond); // if we login OK we generate a token and send the respond back\n\n\n// '/v1/account/logout'\napi.get('/logout', authenticate, (req, res) => {\n  res.logout();\n  res.status(200).send('Successfully logged out');\n});\n\n// this call is to get back some info about the user that is login in,\n// but you need the usres' token to get that info back\napi.get('/me', authenticate, (req, res) => {\n  res.status(200).json(req.user);\n});\n\n  return api;\n}\n"]}